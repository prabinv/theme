@import "bootstrap/mixins";

@mixin respond-to($viewport-size) {
  @if $viewport-size == xs {
    @media only screen and (max-width: $screen-xs-max) {
      @content;
    }
  }
  @else if ($viewport-size == sm) {
    @media only screen and (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
      @content;
    }
  }
  @else if ($viewport-size == sm-and-up) {
    @media only screen and (min-width: $screen-sm-min) {
      @content;
    }
  }
  @else if ($viewport-size == sm-and-down) {
    @media only screen and (max-width: $screen-sm-max) {
      @content;
    }
  }
  @else if ($viewport-size == md) {
    @media only screen and (min-width: $screen-md-min) and (max-width: $screen-md-max) {
      @content;
    }
  }
  @else if ($viewport-size == md-and-up) {
    @media only screen and (min-width: $screen-md-min) {
      @content;
    }
  }
  @else if ($viewport-size == lg) {
    @media only screen and (min-width: $screen-lg-min) {
      @content;
    }
  }
}

@mixin app-font($name, $weight: normal, $style: normal)
{
    $font-files:
        inline-font-files(
            '#{$name}.woff', woff
        ),
        font-files(
            '#{$name}.ttf', truetype,
            '#{$name}.svg#font', svg
        );
    @include font-face($name, $font-files, '#{$name}.eot', $weight, $style);
}

@mixin transition($properties: all, $duration: .3s, $easing: ease-out) {
  @if length($properties) > 1 {
    transition-property: $properties;
    transition-duration: $duration;
    transition-timing-function: $easing;
  } @else {
    transition: $properties $duration $easing;
  }
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin font-smoothing($value: antialiased) {
  -webkit-font-smoothing: $value;
}

// example: @include translucent-bg(@includeSmoke, 0.7);
@mixin translucent-bg($color, $opacity) {
    background-color: $color;
    background-color: transparentize($color, 1 - $opacity);
}

// @mixin icon($folder, $name) {
//   @include #{$folder}-sprite($name);
//   width: #{$folder}-sprite-width($name);
//   height: #{$folder}-sprite-height($name);
// }


